{"meta":{"title":"galagala","subtitle":null,"description":"Enjoy busyness and adapt to loneliness.","author":"galagala","url":"https://galagala0.github.io"},"pages":[{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"bangumi/index.html","permalink":"https://galagala0.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-01-25T10:23:45.862Z","comments":false,"path":"donate/index.html","permalink":"https://galagala0.github.io/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"comment/index.html","permalink":"https://galagala0.github.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"tags/index.html","permalink":"https://galagala0.github.io/tags/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"client/index.html","permalink":"https://galagala0.github.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"lab/index.html","permalink":"https://galagala0.github.io/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"rss/index.html","permalink":"https://galagala0.github.io/rss/index.html","excerpt":"","text":""},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-02-21T14:24:15.146Z","comments":true,"path":"links/index.html","permalink":"https://galagala0.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-02-03T13:54:44.449Z","comments":false,"path":"music/index.html","permalink":"https://galagala0.github.io/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-01-23T09:45:47.151Z","comments":false,"path":"about/index.html","permalink":"https://galagala0.github.io/about/index.html","excerpt":"","text":"[凉凉] 与&nbsp; galagala&nbsp; （ ****** ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2020-01-27T03:40:14.233Z","comments":true,"path":"theme-sakura/index.html","permalink":"https://galagala0.github.io/theme-sakura/index.html","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Sakura"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"video/index.html","permalink":"https://galagala0.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"按位与、或、非、异总结","slug":"yuhuofei","date":"2020-02-10T14:05:53.000Z","updated":"2020-02-10T14:19:07.896Z","comments":true,"path":"2020/02/10/yuhuofei/","link":"","permalink":"https://galagala0.github.io/2020/02/10/yuhuofei/","excerpt":"","text":"位运算符有：&amp;（按位与）、|（按位或）、^（按位异或）、~（按位取反）。 优先级从高到低，依次为~、&amp;、^、| 一：按位与操作（&amp;）0&amp;0=0; 0&amp;1=0; 1&amp;0=0; 1&amp;1=1（有0则0）例子：10&amp;9： 0000 1010 &amp; 0000 1001 = 0000 1000 = 8负数按补码形式参加按位与运算 “与运算”的特殊用途：（1）清零。如果想将一个单元清零，即使其全部二进制位为0，只要与一个各位都为零的数值相与，结果为零。（2）取一个数中指定位方法：找一个数，对应X要取的位，该数的对应位为1，其余位为零，此数与X进行“与运算”可以得到X中的指定位。例：设X=10101110，取X的低4位，用 X &amp; 0000 1111 = 0000 1110 即可得到；还可用来取X的2、4、6位。 二：按位或运算符（|）0|0=0；0|1=1；1|0=1；1|1=1（有1则1） 即 ：参加运算的两个对象只要有一个为1，其值为1。例如:3|5 即 0000 0011 | 0000 0101 = 0000 0111 因此，3|5的值得7。另，负数按补码形式参加按位或运算。 “或运算”特殊作用： 常用来对一个数据的某些位 置1。方法：找到一个数，对应X要置1的位，该数的对应位为1，其余位为零。此数与X相或可使X中的某些位置1。例：将X=10100000的低4位置1 ，用 X | 0000 1111 = 1010 1111即可得到。 三：异或运算符（^）0^0=0；0^1=1；1^0=1；1^1=0；（同0异1） 即：参加运算的两个对象，如果两个相应位为“异”（值不同），则该位结果为1，否则为0。例如：10^-9 即 0000 1010 ^ 1111 0111 = 1111 1101(补码) 原码即为1000 0011 即10^-9 = -3 “异或运算”的特殊作用： （1）使特定位翻转 找一个数，对应X要翻转的各位，该数的对应位为1，其余位为零，此数与X对应位异或即可。例：X=10101110，使X低4位翻转，用X ^ 0000 1111 = 1010 0001即可得到。（2）与0相异或，保留原值 ，X ^ 0000 0000 = 1010 1110。（3）交换a和b 四： 取反运算符（~）~1=0；~0=1； 即：对一个二进制数按位取反，即将0变1，1变0。使一个数的最低位为零，可以表示为：a&amp;~1。 ~1的值为1111111111111110，再按“与”运算，最低位一定为0。因为“~”运算符的优先级比算术运算符、关系运算符、逻辑运算符和其他运算符都高。 五：位移运算符（&lt;&lt;，&gt;&gt;）左移运算符（&lt;&lt;）将一个运算对象的各二进制位全部左移若干位操作数每左移一位，相当于该数乘以2。右移运算符（&gt;&gt;）将一个数的各二进制位全部右移若干位操作数每右移一位，相当于该数除以2。","categories":[{"name":"算法","slug":"算法","permalink":"https://galagala0.github.io/categories/算法/"}],"tags":[],"keywords":[{"name":"算法","slug":"算法","permalink":"https://galagala0.github.io/categories/算法/"}]},{"title":"618（Div.2）Codeforces Round","slug":"Codeforces-Round-618-Div-2","date":"2020-02-10T10:06:40.000Z","updated":"2020-02-10T10:35:37.828Z","comments":true,"path":"2020/02/10/Codeforces-Round-618-Div-2/","link":"","permalink":"https://galagala0.github.io/2020/02/10/Codeforces-Round-618-Div-2/","excerpt":"","text":"前言：cswl B中位数看成平均数傻眼了半天 ？？？？？？md cswl C感受的还不到位？下次仔细感受感受 C. Anu Has a Function题目连接:https://codeforces.com/contest/1300/problem/C 大意：给你n个数 定义函数f(x,y)=(x|y)-y，经过n-1次f(x,y)后输出一种排列顺序，使最终结果最大。 思路一：统计位数，求出位数为1且值最大的数，优先输出。 代码一：#include&lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; #define me(a,b) memset(a,b,sizeof(a)) const int Max = 1e6+5; int a[Max],b[Max]; int main(){ int n; cin&gt;&gt;n; for(int i=0;i&lt;n;i++){ cin&gt;&gt;a[i]; for(ll j=1,k=0;j&lt;=a[i];k++,j&lt;&lt;=1){ if((ll)a[i]&amp;j) b[k]++; } } ll ma=-1,u=-1; for(int i=0;i&lt;n;i++){ ll l=0; for(ll j=1,k=0;j&lt;=a[i];j&lt;&lt;=1,k++){ if((ll)a[i]&amp;j){ if(b[k]==1) l+=j; } } if(l&gt;ma) ma=l,u=i; } cout&lt;&lt;a[u]&lt;&lt;&quot; &quot;; for(int i=0;i&lt;n;i++){ if(i==u) continue; cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;; } return 0; } 思路二：计算前缀和后缀，求出max=(a[i]|前缀|后缀)-(前缀|后缀)，优先输出该值。减号优先级大于位运算符优先级，需注意（大佬的感受） 代码二：#include&lt;bits/stdc++.h&gt; using namespace std; const int Max = 1e6+5; #define cswl return 0; int a[Max],b[Max],c[Max]; int main(){ int n; cin&gt;&gt;n; for(int i=1;i&lt;=n;i++){ cin&gt;&gt;a[i]; } for(int i=1;i&lt;=n;i++){//前缀 b[i]=b[i-1]|a[i]; } for(int i=n;i&gt;=1;i--){//后缀 c[i]=c[i+1]|a[i]; } int ans=-1,v=-1; for(int i=1;i&lt;=n;i++) { int sum=((a[i]|b[i-1]|c[i+1])-(b[i-1]|c[i+1])); if(sum&gt;ans) ans=sum,v=i; } cout&lt;&lt;a[v]&lt;&lt;&quot; &quot;; for(int i=1;i&lt;=n;i++){ if(v==i) continue; cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;; } cswl; }","categories":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}],"tags":[{"name":"math","slug":"math","permalink":"https://galagala0.github.io/tags/math/"}],"keywords":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}]},{"title":"板子","slug":"pow-mod","date":"2020-02-07T13:19:17.000Z","updated":"2020-02-07T13:35:53.244Z","comments":true,"path":"2020/02/07/pow-mod/","link":"","permalink":"https://galagala0.github.io/2020/02/07/pow-mod/","excerpt":"","text":"快速幂板子快速幂就是快速算底数的n次幂。其时间复杂度为 O(log₂N)，与朴素的O(N)相比效率有了极大的提高。 x的y次方 ll pow_mod(ll x,ll y){ ll ans=1; while(y){ if(y&amp;1) ans=ans*x%mod; x=x*x%mod; y&gt;&gt;=1; } return ans%mod; } 唯一分解定理任何一个大于1的自然数 N,如果N不为质数，那么N可以唯一分解成有限个质数的乘积。 inline int check(int x){ int ans=0; for(int i=2;i*i&lt;=x;i++){ if(x%i==0){ ans++; while(x%i==0) x/=i; } } if(x&gt;1) ans++; return ans; }","categories":[{"name":"算法","slug":"算法","permalink":"https://galagala0.github.io/categories/算法/"}],"tags":[],"keywords":[{"name":"算法","slug":"算法","permalink":"https://galagala0.github.io/categories/算法/"}]},{"title":"newcoder2.4","slug":"newcoder2-4","date":"2020-02-05T05:37:11.000Z","updated":"2020-02-05T13:16:01.110Z","comments":true,"path":"2020/02/05/newcoder2-4/","link":"","permalink":"https://galagala0.github.io/2020/02/05/newcoder2-4/","excerpt":"","text":"前言:菜的真实，哈哈哈哈 和同学的差距真的明显。老实补题吧。 A：计数题目连接：https://ac.nowcoder.com/acm/contest/3002/A 题目描述：honoka最近在研究三角形计数问题。 她认为，满足以下三个条件的三角形是“好三角形”。 1.三角形的三个顶点均为格点，即横坐标和纵坐标均为整数。 2.三角形的面积为1。 3.三角形至少有一条边和 x 轴或 y 轴平行。 honoka想知道，在平面中选取一个大小为n * m的矩形格点阵，可以找到多少个不同的“好三角形”？由于答案可能过大，请对1000000007取模。 输入描述:两个正整数n和m（2 ≤n,m≤10^9） 输出描述:面积为1的格点三角形的数量，对 10^9+7 取模的结果。 输入:2 3 100 100 输出:6 7683984 说明:格点如下： 1 1 1 1 1 1不妨设左下角坐标为(1,1)，右上角坐标为到(3,2)。那么三点坐标可选：（1，1）（1，2）（3，1）（1，1）（1，2）（3，2）（1，1）（2，2）（3，1）（1，1）（3，1）（3，2）（1，2）（2，1）（3，2）（1，2）（3，1）（3，2）所以共有6个。 思路：可以把面积为 111 的“好三角形”分为两类分开统计：两条边和两个坐标轴平行；只有一条边和某个坐标轴平行。对于第一种情况，一定是 1∗2 或者 2∗1 的形式，一个 1∗2 的矩形中含有4个不同的三角形。总数是 4∗((n−2)∗(m−1)+(m−2)∗(n−1)) 对于第二种情况，可以分别统计底边为 2 、高为 1 和底边为 1 、高为 2 的情况。要注意底边靠近边界时的特殊讨论。 ①对于底边为2，高为1的情况：若底边和x轴平行，那么底边横向移动（指x轴水平移动，下同）有 n−2 种可能，“对点”（指底边相对的点）的某一面选择有 n−2 种可能（某一面选择，指的是底边固定的情况，对点在一条直线上移动所做出的选择），而底边纵向移动有 m 种情况，其中有 (m−2) 种情况对点可以选择两个面，2种情况对点只能选择一个面（当底边移动到格点阵边界的时候）。因此纵向移动折合为 2∗(m−2)+2 ，即2∗(m−1)∗(n−2)∗(n−2)若底边和y轴平行，同理可推出 2∗(n−1)∗(m−2)∗(m−2) ②对于底边为1，高为2的情况，与上一种情况相似，底高互换即可。 代码：#include&lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; const ll mod = 1000000007; int main(){ ll n,m; cin&gt;&gt;n&gt;&gt;m; ll s = 0; s=4*(n-2)*(m-1)%mod+4*(n-1)*(m-2)%mod; s=(s+2*(n-1)*(m-2)%mod*(m-2)%mod+2*(m-1)*(n-2)%mod*(n-2)%mod)%mod; s=(s+2*(m-1)*(n-2)%mod*(m-2)%mod+2*(n-1)*(m-2)%mod*(n-2)%mod)%mod; cout&lt;&lt;s&lt;&lt;endl; return 0; } E：数论题目链接：https://ac.nowcoder.com/acm/contest/3002/E 题目描述： rin最近喜欢上了数论。 然而数论实在太复杂了，她只能研究一些简单的问题。 这天，她在研究正整数因子个数的时候，想到了一个“快速迭代”算法。设 f(x) 为 x 的因子个数，将 f 迭代下去，rin猜想任意正整数最终都会变成2 。 例如：f(12)=6,f(6)=4,f(4)=3,f(3)=2. 她希望你帮她验证一下。她会给你一个正整数n，让你输出它在迭代过程中，第一次迭代成2 的迭代次数。 输入描述:一个正整数 n(3&lt;=n&lt;=10^12) 输出描述:一个正整数，为 n 迭代至 2 的次数。 输入：12 输出：4 说明：12的因子：1，2，3，4，6，12。共6个。6的因子：1，2，3，6。共4个。4的因子：1，2，4。共3个。3的因子：1，3。共2个。12 → 6 → 4 → 3 → 2 ， 故迭代了4次。 思路：一个水题，写出来是因为我也总是忘记开根号。考察根号n时间复杂度。哦对了，要注意开long long和求因数个数时的操作。 代码：#include&lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; inline int check(ll x){ int num=0; for(ll i=1;i*i&lt;=x;i++){ if(x%i==0) if(i*i==x)num++; else num+=2; } return num; } int main(){ ll n; cin&gt;&gt;n; int ans=0; while(n!=2){ n=check(n); ans++; } cout&lt;&lt;ans&lt;&lt;endl; return 0; } G：二分题目链接：https://ac.nowcoder.com/acm/contest/3002/G 题目描述eli拿到了一个仅由小写字母组成的字符串。 她想截取一段连续子串，这个子串包含至少 k 个相同的某个字母。 她想知道，子串的长度最小值是多少？ 注：所谓连续子串，指字符串删除头部和尾部的部分字符（也可以不删除）剩下的字符串。例如：对于字符串“arcaea”而言，“arc”、“rcae”都是其子串。而“car”、“aa”则不是它的子串。 输入描述:第一行输入两个正整数 n 和 k (1&lt;=k&lt;=n&lt;=200000)输入仅有一行，为一个长度为 n 的、仅由小写字母组成的字符串。 输出描述:如果无论怎么取都无法满足条件，输出 -1 。否则输出一个正整数，为满足条件的子串长度最小值。 输入：5 2abeba 输出：3 说明：选择“beb”子串，长度为3，其中包含相同的两个’b’ 思路：多种做法，这里展示二分答案的方法。左界限为长度为1，右界限为长度为n。check时，根据当前答案长度从左依次向右判断。相同字母个数大于等于k则记录答案，缩小右界限。若始终小于k，则缩小左界限。 代码：#include&lt;bits/stdc++.h&gt; using namespace std; const int Max = 200010; int n,k; string s; int a[Max]; inline bool check(int x){ memset(a,0,sizeof(a)); for(int i=0;i&lt;x;i++){ a[s[i]-&#39;a&#39;]++; if(a[s[i]-&#39;a&#39;]&gt;=k) return 1; } for(int i=0;i+x&lt;n;i++){ a[s[i]-&#39;a&#39;]--; a[s[x+i]-&#39;a&#39;]++; if(a[s[x+i]-&#39;a&#39;]&gt;=k) return 1; } return 0; } int main(){ cin&gt;&gt;n&gt;&gt;k&gt;&gt;s; int l=1,r=n; int ans=-1; while(l&lt;=r){ int mid=(r+l)&gt;&gt;1; if(check(mid)) ans=mid,r=mid-1; else l=mid+1; } cout&lt;&lt;ans&lt;&lt;endl; } H：二分题目链接：https://ac.nowcoder.com/acm/contest/3002/H 题目描述:nozomi看到eli在字符串的“花园”里迷路了，决定也去研究字符串问题。 她想到了这样一个问题： 对于一个 “01”串而言，每次操作可以把 0 字符改为 1 字符，或者把 1 字符改为 0 字符。所谓“01”串，即只含字符 0 和字符 1 的字符串。 nozomi有最多 K 次操作的机会。她想在操作之后找出一个尽可能长的连续子串，这个子串上的所有字符都相同。 nozomi想问问聪明的你，这个子串的长度最大值是多少？ 注 K 次操作机会可以不全部用完。 如果想知道连续子串的说明，可以去问问eli，nozomi不想再讲一遍。 输入描述:第一行输入两个正整数 n 和 k (1&lt;= k &lt;= n &lt;=200000)输入仅有一行，为一个长度为 n 的、仅由字符 0 和 1 组成的字符串。 输出描述:一个正整数，为满足条件的子串长度最大值。 输入：5 110101 输出：3 说明：只有 1 次操作机会。将第二个位置的 0\\mathit00 改成 1 ，字符串变成 11101，可以选出 “111”子串，长度为 1。如果修改第三个或者第四个位置的字符也可以选出长度为 3 的子串。 思路：同样是二分答案的方法，与G题极度相似，可惜没写出来，二分还是不熟 wtcl左界限为1，右界限为n。check中分别记录当前长度中0、1个数。任意一个小于k则满足条件。寻找更大值。不满足则从左到右遍历，若满足则返回记录答案，寻找更大值。此题为寻找最大值，故满足条件时应当改动左边界，寻找更大值。 代码：#include&lt;bits/stdc++.h&gt; using namespace std; const int Max = 200010; int n,k; string s; inline bool check (int x){ int one=0,zero=0; for(int i=0;i&lt;x;i++){ if(s[i]==&#39;1&#39;)one++; else zero++; } if(one&lt;=k||zero&lt;=k) return 1; for(int l=0,r=x;r&lt;n;l++,r++){ if(s[r]==&#39;1&#39;)one++; else zero++; if(s[l]==&#39;1&#39;)one--; else zero--; if(one&lt;=k||zero&lt;=k) return 1; } return 0; } int main(){ cin&gt;&gt;n&gt;&gt;k&gt;&gt;s; int l=1,r=n; int ans=0; while(l&lt;=r){ int mid=l+r&gt;&gt;1; if(check(mid)) ans=mid,l=mid+1; else r=mid-1; } cout&lt;&lt;ans&lt;&lt;endl; } I：DP题目链接：https://ac.nowcoder.com/acm/contest/3002/I 题目描述： nico平时最喜欢说的口头禅是niconiconi~。 有一天nico在逛著名弹幕网站”niconico”的时候惊异的发现，n站上居然有很多她的鬼畜视频。其中有一个名为《让nico为你洗脑》的视频吸引了她的注意。 她点进去一看，就被洗脑了:”niconicoh0niconico^vvniconicoG(vniconiconiconiconiconicoG(vniconico……” 弹幕中刚开始有很多“nico1 nico*2”等计数菌，但到后面基本上都是“计数菌阵亡”的弹幕了。 nico也想当一回计数菌。她认为：”nico” 计a 分，”niconi” 计b 分，”niconiconi” 计c 分。 她拿到了一个长度为n 的字符串，请帮她算出最大计数分数。 注：已被计数过的字符不能重复计数！如”niconico”要么当作”nico”+”nico”计2a分，要么当作”niconi”+”co”计 b分。 输入描述:第一行四个正整数n,a,b,c, 。(1&lt;=n&lt;=300000,1&lt;=a,b,c&lt;=10^9)第二行是一个长度为n的字符串。 输出描述:一个整数，代表最大的计数分数。 输入:19 1 2 5niconiconiconiconi~ 输出:7 说明:“niconi”co”niconiconi”~故为2+5=7分 思路：做题的时候完全被A和H给搞晕了，现在看看感觉就是个简单的dp？我以后做题的时候再也不听歌了（尽量）直接看代码吧，动态转移方程也不是很难。 代码：#include&lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; #define me(a,b) memset(a,b,sizeof(a)) const int Max = 300010; ll dp[Max]; int n,a,b,c; int main(){ cin&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;c; string s; cin&gt;&gt;s; me(dp,0); for(int i=1;i&lt;n;i++) { dp[i]=dp[i-1]; if(i&gt;=3&amp;&amp;s.substr(i-3,4)==&quot;nico&quot;) dp[i]=max(dp[i],dp[i-3]+a); if(i&gt;=5&amp;&amp;s.substr(i-5,6)==&quot;niconi&quot;) dp[i]=max(dp[i],dp[i-5]+b); if(i&gt;=9&amp;&amp;s.substr(i-9,10)==&quot;niconiconi&quot;) dp[i]=max(dp[i],dp[i-9]+c); } cout&lt;&lt;dp[n-1]&lt;&lt;endl; return 0; }","categories":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}],"tags":[{"name":"二分 贪心 dp","slug":"二分-贪心-dp","permalink":"https://galagala0.github.io/tags/二分-贪心-dp/"}],"keywords":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}]},{"title":"日志","slug":"diary","date":"2020-02-03T04:31:21.465Z","updated":"2020-02-21T04:57:47.505Z","comments":true,"path":"2020/02/03/diary/","link":"","permalink":"https://galagala0.github.io/2020/02/03/diary/","excerpt":"","text":"202002.03怎么说呢，心里的想法总是很多，更像是一种忏悔？放弃了喜欢的人，拒绝了喜欢自己的人，还真是病态呢假期这么久了，别人越来越强，自己还在迷茫。想法很多，行动很少。还真是思想上的巨人，行动上的矮子。下一步该怎么办呢，我也不知道，干啥啥不行真是体现的淋漓尽致。看着莫名其妙的内容，熬着莫名其妙的夜，说着莫名其妙的话，脑子里尽是莫名其妙的想法。一场病，爆发出社会的不公。自身难保的人还在杞人忧天。哈哈怎么会想这些东西呢我好想与人分享这些废话，但你看，这都是废话，谁会愿意听呢。眼里布满了污渍，抹不去，忘不掉。 02.14以往都是你送我，这次成了我送你。大概是因为第一次体验这种感觉吧。眼泪止不住的流 02.21又过去了一星期，这周网课可真是太魔幻了今天英语四级成绩出来了，果不其然，没过23333366闰年一年？暗示再来一年？不不不不不不不不莫名其妙就很容易被别人安慰，大概是自己太没用了吧充满斗志，英语冲冲冲","categories":[],"tags":[],"keywords":[]},{"title":"612 (Div. 2) Codeforces Round","slug":"Codeforces-Round-612-Div-2","date":"2020-01-30T02:54:27.000Z","updated":"2020-01-30T05:40:38.626Z","comments":true,"path":"2020/01/30/Codeforces-Round-612-Div-2/","link":"","permalink":"https://galagala0.github.io/2020/01/30/Codeforces-Round-612-Div-2/","excerpt":"","text":"颓了这么久 本来就不会什么 这下真的啥也不会了废话就不多说了 难顶 B题题目连接：https://codeforces.com/contest/1287/problem/B 题目大意：​ 给定多个字符串，找出三个字符串为一组满足每列均相同或均不相同，输出能够找到的组数。 输入输出样例： 思路：​ 定义map&lt;string,int&gt;统计重复出现的字符串。选择两个字符串筛选符合的第三串，此方法会将同一组重复三次，故答案除以三。 代码：#include&lt;bits/stdc++.h&gt;//1.5 B using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; #define me(a,b) memset(a,b,sizeof(a)) string str[2000]; map&lt;string,int&gt; cnt;//通过map记录字符串的次数 int main(){ int n,t; cin&gt;&gt;n&gt;&gt;t; for(int i=0;i&lt;n;i++){ cin&gt;&gt;str[i]; cnt[str[i]]++;//记录相同字符串数量 } string tmp = str[0];//从第一行开始 int ans = 0; for(int i=0;i&lt;n;i++){ for(int j=i+1;j&lt;n;j++){ for(int k=0;k&lt;t;k++){ if(str[i][k]==str[j][k]){//若第i行与i+1行的第k字符相同 tmp[k]=str[i][k];//记录改字符 }else{//不同则取两字符另外一个字符 tmp[k]=&#39;S&#39;^&#39;E&#39;^&#39;T&#39;^str[i][k]^str[j][k]; } }//循环结束后tmp即所需字符串 ans+=cnt[tmp];//加该字符串所对应数量 } } cout&lt;&lt;ans/3&lt;&lt;&#39;\\n&#39;;//同一组字符串重复三次 故除以三 return 0; } C题题目连接：https://codeforces.com/contest/1287/problem/C 题目大意：​ 从1-n一共n个数字，奇偶性不同的两个数相邻则复杂度+1，给定一些排好的数，将剩余数字排列其中同时使得复杂度最小。 输入输出样例： 思路：​ 简单dp，先分别计算出剩余的奇数、偶数个数，进行dp ​ dp数组：dp [x] [j] [o] [k] 分别为当前位置，奇数剩余个数，偶数剩余个数，上一位置奇偶性 代码：#include&lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; const int INF = 0x3f3f3f3f; #define me(a,b) memset(a,b,sizeof(a)) const int maxn = 105; int dp[maxn][maxn][maxn][4],n,a[maxn]; int dfs(int x,int j,int o,int k)//k值为判断上一个数的奇偶 { if(x==n+1)return 0;//结束 if(dp[x][j][o][k]!=-1) return dp[x][j][o][k];//已遍历，跳过 dp[x][j][o][k]=0;//初始化 if(a[x]!=0) //该位置不为零 { if(a[x]%2==k||k==2)//和上一位置奇偶相同或为起始位,复杂度不变 dp[x][j][o][k]=dfs(x+1,j,o,a[x]%2); else//奇偶不同则复杂度加一 dp[x][j][o][k]=dfs(x+1,j,o,a[x]%2)+1; } else//该位置为零 { int l=maxn*10,r=maxn*10; if(k==2) //起始位置 { if(j&gt;0) l=dfs(x+1,j-1,o,1);//奇数 if(o&gt;0) r=dfs(x+1,j,o-1,0);//偶数 } if(k==1) //若为奇数 { if(j&gt;0) l=dfs(x+1,j-1,o,1);//奇数 if(o&gt;0) r=dfs(x+1,j,o-1,0)+1;//偶数 } if(k==0) //若为偶数 { if(j&gt;0) l=dfs(x+1,j-1,o,1)+1;//奇数 if(o&gt;0) r=dfs(x+1,j,o-1,0);//偶数 } dp[x][j][o][k]=min(dp[x][j][o][k]+l,dp[x][j][o][k]+r); } return dp[x][j][o][k]; } int main() { me(dp,-1); cin&gt;&gt;n; int j=n/2+n%2; int o=n/2; for(int i=1; i&lt;=n; i++) { cin&gt;&gt;a[i]; if(a[i]!=0) { if(a[i]%2==1) j--; if(a[i]%2==0) o--; } } cout&lt;&lt;dfs(1,j,o,2)&lt;&lt;&#39;\\n&#39;; return 0; } 总结：​ 假期一开始的一场练习，结果到现在才补题，自觉性着实不行。简单来说，菜的离谱。","categories":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}],"tags":[{"name":"dp","slug":"dp","permalink":"https://galagala0.github.io/tags/dp/"},{"name":"map","slug":"map","permalink":"https://galagala0.github.io/tags/map/"}],"keywords":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}]},{"title":"终于完成","slug":"start","date":"2020-01-29T12:29:29.000Z","updated":"2020-01-29T13:48:02.460Z","comments":true,"path":"2020/01/29/start/","link":"","permalink":"https://galagala0.github.io/2020/01/29/start/","excerpt":"","text":"博客 get√ 之前看到别人的个人博客很好看，羡慕的不行，就决定自己也要搞一个。 寒假前各种计划，各种目标。 寒假开始，计划？目标？ 一放假就懒癌发作，拖拖拉拉弄到现在，放一些常用的指令吧，说不定哪天失忆了呢 = 。= 关于hexo的一些常用命令hexo clean 清楚缓存文件db.json和已生成的静态文件public。 hexo s 是hexo server的缩写，启动本地服务器，用于浏览主题。默认地址: https://localhost:4000/ 浏览的同时可以修改文章内容或主题代码，保存后刷新页面即可。 hexo g 是hexo generate的简写形式，生成静态文件到public文件夹。 hexo d 是hexo deploy的简写形式，部署静态文件到设定的仓库。 hexo d -g 是hexo g,hexo d的简写形式，生成部署一步到位。 hexo n &quot;文章名&quot; 写文章 关于cdn的一些常用命令git add .or &#39;文件&#39; 上传文件 git commit -m &quot;第一次提交&quot; 提交内容 git push 发送内容到仓库 暂时只接触到这些，之后再更新一些别的吧 嘿嘿","categories":[{"name":"随想","slug":"随想","permalink":"https://galagala0.github.io/categories/随想/"}],"tags":[],"keywords":[{"name":"随想","slug":"随想","permalink":"https://galagala0.github.io/categories/随想/"}]},{"title":"text测试","slug":"text","date":"2020-01-25T09:12:16.409Z","updated":"2020-01-30T02:48:04.729Z","comments":true,"path":"2020/01/25/text/","link":"","permalink":"https://galagala0.github.io/2020/01/25/text/","excerpt":"","text":"这是我的第一次测试~超链接嘿嘿. 这大概是一个二级标题吧三级标题？有点奇怪","categories":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}],"tags":[{"name":"text1","slug":"text1","permalink":"https://galagala0.github.io/tags/text1/"},{"name":"text2","slug":"text2","permalink":"https://galagala0.github.io/tags/text2/"}],"keywords":[{"name":"补题","slug":"补题","permalink":"https://galagala0.github.io/categories/补题/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2020-01-29T13:50:57.094Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"https://galagala0.github.io/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"算法","slug":"算法","permalink":"https://galagala0.github.io/categories/算法/"}],"tags":[{"name":"web","slug":"web","permalink":"https://galagala0.github.io/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"https://galagala0.github.io/tags/悦读/"}],"keywords":[{"name":"算法","slug":"算法","permalink":"https://galagala0.github.io/categories/算法/"}]}]}